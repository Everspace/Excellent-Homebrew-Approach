{
  "name": "exellent-homebrew-approach",
  "description": "A way to store homebrew for exalted, exellently",
  "version": "1.0.0",
  "author": "Aaron Haaf <aabonh@gmail.com>",
  "private": true,
  "dependencies": {
    "@emotion/core": "^10.0.7",
    "chalk": "^2.4.0",
    "dashify": "^2.0.0",
    "gatsby": "^2.13.3",
    "gatsby-plugin-catch-links": "^2.1.3",
    "gatsby-plugin-emotion": "^4.1.0",
    "gatsby-plugin-react-helmet": "^3.0.0",
    "gatsby-plugin-resolve-src": "2.0.0",
    "gatsby-remark-autolink-headers": "^2.1.3",
    "gatsby-remark-source-name": "^1.0.0",
    "gatsby-source-filesystem": "^2.0.0",
    "gatsby-transformer-remark": "^2.3.0",
    "graphql": "^14.3.0",
    "react": "^16.8.3",
    "react-dom": "^16.8.3",
    "react-helmet": "^5.2.0"
  },
  "keywords": [
    "gatsby"
  ],
  "license": "MIT",
  "scripts": {
    "build-plugin": "babel --presets=@babel/preset-env -d ./plugins/gatsby-remark-exalted/dist ./plugins/gatsby-remark-exalted/src",
    "build": "gatsby build",
    "develop": "gatsby develop",
    "format": "prettier-tslint fix 'src/**/*.js' 'plugins/gatsby-*/src/**/*'",
    "lint": "prettier-tslint check 'src/**/*' 'plugins/gatsby-*/src/**/*'",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "devDependencies": {
    "@babel/cli": "7.5.5",
    "@babel/core": "^7.4.4",
    "@babel/preset-env": "^7.5.5",
    "babel-jest": "^24.8.0",
    "core-js": "^3.2.1",
    "jest": "^24.1.0",
    "prettier": "^1.12.0",
    "react-test-renderer": "^16.8.3",
    "regenerator-runtime": "^0.13.3",
    "typescript": "^3.4.5"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Everspace/Exellent-Homebrew-Approach"
  },
  "jest": {
    "transform": {
      "^.+\\.jsx?$": "<rootDir>/jest-preprocess.js"
    },
    "testRegex": "/.*\\.test\\.js?$",
    "moduleDirectories": [
      "node_modules",
      "bower_components",
      "src"
    ],
    "moduleNameMapper": {
      ".+\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js"
    },
    "testPathIgnorePatterns": [
      "node_modules",
      ".cache",
      "dist"
    ],
    "transformIgnorePatterns": [
      "node_modules/(?!(gatsby)/)"
    ],
    "globals": {
      "__PATH_PREFIX__": ""
    },
    "setupFiles": [
      "<rootDir>/loadershim.js"
    ]
  }
}
